apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def versionProperties = new Properties()
def versionPropertiesFile = rootProject.file('version.properties')
if (versionPropertiesFile.exists()) {
    versionProperties.load(new FileInputStream(versionPropertiesFile))
}
project.logger.lifecycle(versionProperties['versionCode'])
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
android {
    buildFeatures {
        buildConfig = true
    }
    buildTypes {
        localDev.initWith(buildTypes.debug)
        localDev {
            buildConfigField 'String', 'URL', '\"10.0.2.2:8000\"'
            buildConfigField 'boolean', 'isTLS', 'false'
        }
        remoteDev.initWith(buildTypes.debug)
        remoteDev {
            buildConfigField "String", "URL", "\"cookbookservice.azurewebsites.net\""
            buildConfigField 'boolean', 'isTLS', 'true'
        }
    }
    compileSdkVersion "android-UpsideDownCake"
    buildToolsVersion '30.0.3'
    namespace "com.jasonstudio.cookbook2"



    defaultConfig {
        applicationId 'com.jasonstudio.cookbook2'
        minSdkVersion 23
        targetSdkVersion 33
        versionCode versionProperties['versionCode'] as Integer
        versionName '1.2'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    compileOptions {
        sourceCompatibility 11
        targetCompatibility 11
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    sourceSets {
        main {
            java {
                srcDirs 'src/main/java', 'src/main/java/com.jasonstudio.cookbook2/IngredientClasses'
            }
        }
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.1.2'
    testImplementation 'junit:junit:4.13.2'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.google.code.gson:gson:2.9.0'

    def glide_version = '4.13.2'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.google.android.material:material:1.10.0-alpha03'

    testImplementation 'com.android.volley:volley:1.2.1'
    testImplementation 'org.robolectric:robolectric:3.8'
    implementation 'com.github.Philjay:MPAndroidChart:v3.1.0'

    def lifecycle_version = '2.2.0'
    def room_version = '2.5.1'
    implementation "androidx.room:room-runtime:$room_version"
    implementation("androidx.room:room-ktx:$room_version")
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation "androidx.room:room-rxjava2:$room_version"

    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.8.2'
    //ktx android
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.7'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation platform('com.google.firebase:firebase-bom:32.0.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation 'com.stripe:stripe-android:20.24.2'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:32.0.0')

    // Declare the dependency for the Cloud Firestore library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'
    implementation ('io.socket:socket.io-client:2.0.0') {
        exclude group: 'org.json', module: 'json'
    }
    implementation "androidx.biometric:biometric:1.1.0"
    implementation "androidx.biometric:biometric-ktx:1.2.0-alpha05"
    implementation "androidx.security:security-crypto:1.1.0-alpha06"
}
